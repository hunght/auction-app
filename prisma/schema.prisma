// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                  Int           @id @default(autoincrement())
  email               String        @unique
  password            String
  // Other user-related fields
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  balance             Float         @default(100000)
  // User verification details
  verification        Verification?
  myItems             Item[]        @relation("createdByUser")
  bids                Bid[]
  outcomeTransactions Transaction[] @relation("sender")
  winItems            Item[]        @relation("winnerItems")

  incomeTransactions Transaction[] @relation("receiver")
}

model Verification {
  id         Int       @id @default(autoincrement())
  token      String    @unique
  createdAt  DateTime  @default(now())
  verifiedAt DateTime?
  user       User      @relation(fields: [userId], references: [id])
  userId     Int       @unique
}

// Define the Item model to store item details
enum ItemStatus {
  DRAFT
  PUBLISHED
  COMPLETED
}

model Item {
  id             Int        @id @default(autoincrement())
  name           String
  startingPrice  Float
  currentPrice   Float
  auctionEndTime DateTime
  status         ItemStatus @default(PUBLISHED) // "draft", "published", "completed", etc.
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  createdBy      User       @relation("createdByUser", fields: [createdById], references: [id])
  createdById    Int
  bids           Bid[]      @relation("itemBids")
  winner         User?      @relation("winnerItems", fields: [winnerId], references: [id])
  winnerId       Int?

  @@index([status])
  @@index([createdById])
  @@index([winnerId])
}

enum BidStatus {
  ACTIVE
  DELETED
}

// Define the Bid model to store bids
model Bid {
  id          Int          @id @default(autoincrement())
  amount      Float
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  item        Item         @relation("itemBids", fields: [itemId], references: [id])
  itemId      Int
  transaction Transaction?
  status      BidStatus    @default(ACTIVE)

  @@index([itemId])
  @@index([userId])
}

enum TransactionStatus {
  DRAFT
  RELESASED
}

// Define the Transaction model to store transaction history
model Transaction {
  id         Int               @id @default(autoincrement())
  amount     Float
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  sender     User              @relation("sender", fields: [senderId], references: [id])
  senderId   Int
  bid        Bid               @relation(fields: [bidId], references: [id])
  bidId      Int               @unique
  status     TransactionStatus @default(DRAFT)
  receiver   User              @relation("receiver", fields: [receiverId], references: [id])
  receiverId Int

  @@index([status])
  @@index([senderId])
  @@index([bidId])
  @@index([receiverId])
}
